datos <- fread("./datos/beca.csv")
library("data.table")
library("caret")
library("pROC")
library("data.table")
library("caret")
install.packages(caret)
install.packages(caret)
install.packages("caret")
install.packages("pROC")
library("caret")
library("pROC")
becas <- fread("./datos/beca.csv", sep=";")
#validacion simple
#fijo semilla aleatoria
set.seed(1234)
porc <- 0.7
#encuentro el n de observaciones de los datos
N <- nrow(becas)
#tamaÃ±o de la particion de entenamiento
tamanio <- floor(porc*N)
#encuentro el conjunto de indices de entrenamiento
train.ind <- sample(seq_len(N), size=tamanio)
#separo los datos
becas.train <- becas[train.ind,]
becas.test <- becas[-train.ind,]
#veo proporcion de la clase
table(becas.train$beca)
table(becas.test$beca)
#encuentro modelo de regresion logistica
modelo.becas <- glm(beca~matematica, becas.train, family="binomial")
summary(modelo.becas)
#grfico modelo
plot(beca~matematica, becas.train, col=factor(becas.train$beca))
#agrego funcion ajustada
curve(1/(1+exp(-modelo.becas$coefficients[1]-modelo.becas$coefficients)), add=TRUE, col="gray20")
#agrego funcion ajustada
curve(1/(1+exp(-modelo.becas$coefficients[1]-modelo.becas$coefficients[2]*x)), add=TRUE, col="gray20")
#predecimos:
becas.pred <- predict(modelo.becas, becas.test, type="response")
pred.modelo <- ifelse(becas.pred>0.5,1,0)
#evaluo el modelo
plot.roc(pred.modelo,becas.test$beca)
#area bajo la curva
auc(pred.modelo,becas.test$beca)
#----------------------------------------
#proporcion 80-20
porc2 <- 0.8
N <- nrow(becas)
tamanio <- floor(porc*N)
train.ind <- sample(seq_len(N), size=tamanio)
#----------------------------------------
#proporcion 80-20
porc2 <- 0.8
N2 <- nrow(becas)
tamanio2 <- floor(porc*N)
train.ind2 <- sample(seq_len(N), size=tamanio)
becas2.train <- becas[train.ind,]
becas2.test <- becas[-train.ind,]
modelo2.becas <- glm(beca~matematica, becas2.train, family="binomial")
curve(1/(1+exp(-modelo2.becas$coefficients[1]-modelo2.becas$coefficients[2]*x)), add=TRUE, col="gray20")
modelo2.becas <- glm(beca~matematica, becas2.train, family="binomial")
curve(1/(1+exp(-modelo2.becas$coefficients[1]-modelo2.becas$coefficients[2]*x)), add=TRUE, col="gray20")
becas.pred <- predict(modelo.becas, becas.test, type="response")
becas2.train <- becas[train.ind,]
becas2.test <- becas[-train.ind,]
modelo2.becas <- glm(beca~matematica, becas2.train, family="binomial")
becas2.pred <- predict(modelo2.becas, becas2.test, type="response")
plot.roc(pred2.modelo,becas2.test$beca)
pred2.modelo <- ifelse(becas2.pred>0.5,1,0)
plot.roc(pred2.modelo,becas2.test$beca)
auc(pred2.modelo,becas2.test$beca)
plot.roc(pred2.modelo,becas2.test$beca)
plot.roc(pred2.modelo,becas2.test$beca)
auc(pred2.modelo,becas2.test$beca)
#----------------------------------------
#proporcion 80-20
porc2 <- 0.8
N2 <- nrow(becas)
tamanio2 <- floor(porc*N2)
train.ind2 <- sample(seq_len(N2), size=tamanio2)
becas2.train <- becas[train.ind,]
becas2.test <- becas[-train.ind,]
modelo2.becas <- glm(beca~matematica, becas2.train, family="binomial")
becas2.pred <- predict(modelo2.becas, becas2.test, type="response")
pred2.modelo <- ifelse(becas2.pred>0.5,1,0)
plot.roc(pred2.modelo,becas2.test$beca)
auc(pred2.modelo,becas2.test$beca)
N2 <- nrow(becas)
tamanio2 <- floor(porc*N2)
train.ind2 <- sample(seq_len(N2), size=tamanio2)
becas2.train <- becas[train.ind2,]
becas2.test <- becas[-train.ind2,]
modelo2.becas <- glm(beca~matematica, becas2.train, family="binomial")
becas2.pred <- predict(modelo2.becas, becas2.test, type="response")
pred2.modelo <- ifelse(becas2.pred>0.5,1,0)
plot.roc(pred2.modelo,becas2.test$beca)
auc(pred2.modelo,becas2.test$beca)
#----------------------------------------
#proporcion 80-20
porc2 <- 0.8
tamanio2 <- floor(porc2*N)
train.ind2 <- sample(seq_len(N), size=tamanio2)
becas2.train <- becas[train.ind2,]
becas2.test <- becas[-train.ind2,]
modelo2.becas <- glm(beca~matematica, becas2.train, family="binomial")
becas2.pred <- predict(modelo2.becas, becas2.test, type="response")
pred2.modelo <- ifelse(becas2.pred>0.5,1,0)
plot.roc(pred2.modelo,becas2.test$beca)
auc(pred2.modelo,becas2.test$beca)
plot(beca~matematica, becas2.train, col=factor(becas2.train$beca))
#----------------------------------------
#proporcion 80-20
porc2 <- 0.8
tamanio2 <- floor(porc2*N)
train.ind2 <- sample(seq_len(N), size=tamanio2)
becas2.train <- becas[train.ind2,]
becas2.test <- becas[-train.ind2,]
modelo2.becas <- glm(beca~matematica, becas2.train, family="binomial")
plot(beca~matematica, becas2.train, col=factor(becas2.train$beca))
becas2.pred <- predict(modelo2.becas, becas2.test, type="response")
pred2.modelo <- ifelse(becas2.pred>0.5,1,0)
plot.roc(pred2.modelo, becas2.test$beca)
auc(pred2.modelo, becas2.test$beca)
#---------------------------------------
#proporcion 90-10
porc3 <- 0.9
tamanio3 <- floor(porc3*N)
train.ind3 <- sample(seq_len(N), size=tamanio3)
becas3.train <- becas[train.ind3,]
becas3.test <- becas[-train.ind3,]
modelo3.becas <- glm(beca~matematica, becas3.train, family="binomial")
plot(beca~matematica, becas3.train, col=factor(becas3.train$beca))
becas3.pred <- predict(modelo3.becas, becas3.test, type="response")
pred3.modelo <- ifelse(becas3.pred>0.5,1,0)
plot.roc(pred3.modelo, becas3.test$beca)
auc(pred3.modelo, becas3.test$beca)
#validacion simple
#fijo semilla aleatoria
set.seed(1234)
#---------------------------------------
#proporcion 90-10
porc3 <- 0.9
tamanio3 <- floor(porc3*N)
train.ind3 <- sample(seq_len(N), size=tamanio3)
becas3.train <- becas[train.ind3,]
becas3.test <- becas[-train.ind3,]
modelo3.becas <- glm(beca~matematica, becas3.train, family="binomial")
plot(beca~matematica, becas3.train, col=factor(becas3.train$beca))
becas3.pred <- predict(modelo3.becas, becas3.test, type="response")
pred3.modelo <- ifelse(becas3.pred>0.5,1,0)
plot.roc(pred3.modelo, becas3.test$beca)
auc(pred3.modelo, becas3.test$beca)
install.packages("ISLR")
data(Default)
library("ISLR")
datos <- Default
set.seed(1234)
N <- nrow(datos)
N2 <- nrow(datos)
porc4 <- 0.8
tamanio4 <- floor(porc4*N2)
train.ind4 <- sample(seq_len(N2), size=tamanio4)
datos.train <- datos[train.ind4,]
datos.test <- datos[-train.ind4,]
modelo.datos <- glm(default~ingreso, datos.train, family="binomial")
modelo.datos <- glm(default~income, datos.train, family="binomial")
summary(modelo.datos)
plot(default~income, datos.train, col=factor(datos.train$default))
datos.pred <- predict(modelo.datos, becas3.test, type="response")
datos.pred <- predict(modelo.datos, datos.test, type="response")
pred.modelo <- ifelse(datos.pred>0.5,1,0)
plot.roc(pred.modelo, datos.test$default)
e
auc(pred.modelo, datos.test$default)
#cambio el modelo:
modelo2.datos <- glm(default~student, datos.train, family="binomial")
summary(modelo2.datos)
#cambio el modelo:
modelo2.datos <- glm(default~balance, datos.train, family="binomial")
summary(modelo2.datos)
plot(default~balance, datos.train, col=factor(datos.train$default))
plot(default~balance, datos.train, col=factor(datos.train$balance))
plot(default~balance, datos.train, col=factor(datos.train$default))
datos.pred2 <- predict(modelo2.datos, datos.test, type="response")
pred2.modelo <- ifelse(datos.pred>0.5,1,0)
plot.roc(pred2.modelo, datos.test$default)
auc(pred.modelo, datos.test$default)
pred2.modelo <- ifelse(datos.pred>0.5,1,0)
plot.roc(pred2.modelo, datos.test$default)
auc(pred2.modelo, datos.test$default)
plot(default~balance, datos.test, col=factor(datos.train$default))
plot(default~balance, datos.test, col=factor(datos.test$default))
plot(default~balance, datos.test, col=datos.test$default)
datos$default <- ifelse(datos$default=="Yes",1,0)
pred2.modelo <- ifelse(datos.pred>0.5,1,0)
datos <- Default
datos$default <- ifelse(datos$default=="Yes",1,0)
set.seed(1234)
N2 <- nrow(datos)
porc4 <- 0.8
tamanio4 <- floor(porc4*N2)
train.ind4 <- sample(seq_len(N2), size=tamanio4)
datos.train <- datos[train.ind4,]
datos.test <- datos[-train.ind4,]
#datos de entrenamiento
modelo.datos <- glm(default~income, datos.train, family="binomial")
summary(modelo.datos)
plot(default~income, datos.train, col=factor(datos.train$default))
datos.pred <- predict(modelo.datos, datos.test, type="response")
pred.modelo <- ifelse(datos.pred>0.5,1,0)
plot.roc(pred.modelo, datos.test$default)
auc(pred.modelo, datos.test$default)
#cambio el modelo:
modelo2.datos <- glm(default~balance, datos.train, family="binomial")
summary(modelo2.datos)
plot(default~balance, datos.test, col=datos.test$default)
datos.pred2 <- predict(modelo2.datos, datos.test, type="response")
plot(default~balance, datos.test, col=factor(datos.test$default)
plot(default~balance, datos.test, col=factor(datos.test$default))
plot(default~balance, datos.test, col=datos.test$default)
datos.pred2 <- predict(modelo2.datos, datos.test, type="response")
pred2.modelo <- ifelse(datos.pred>0.5,1,0)
plot.roc(pred2.modelo, datos.test$default)
summary(pred2.modelo)
#cambio el modelo:
modelo_saldo <- glm(default~balance, train, family = "binomial")
summary(modelo_saldo)
