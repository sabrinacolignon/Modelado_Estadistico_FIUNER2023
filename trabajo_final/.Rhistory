x = "Fumar", y = "Cantidad") +
scale_fill_manual(values = c("purple", "green"),
labels = c("No Diabetes", "Diabetes"))
ggplot(datos, aes(x = sex, fill = high_blood_pressure)) +
geom_bar(position = "dodge") +
labs(title = "Cruce de variables: Sexo y Hipertensión",
x = "Sexo", y = "Cantidad") +
scale_fill_manual(values = c("purple", "darkgreen"),
labels = c("No Hipertensión", "Hipertensión"))
ggplot(datos, aes(x = sex, fill = high_blood_pressure)) +
geom_bar(position = "dodge") +
labs(title = "Cruce de variables: Sexo y Hipertensión",
x = "Sexo", y = "Cantidad") +
scale_fill_manual(values = c("purple", "darkgreen"),
labels = c("No Hipertensión", "Hipertensión"))
datos$high_blood_pressure <- factor(datos$high_blood_pressure, levels = c(0, 1), labels = c("No", "Sí"))
ggplot(datos, aes(x = sex, fill = high_blood_pressure)) +
geom_bar(position = "dodge") +
labs(title = "Cruce de variables: Sexo y Hipertensión",
x = "Sexo", y = "Cantidad") +
scale_fill_manual(values = c("purple", "darkgreen"),
labels = c("No Hipertensión", "Hipertensión"))
datos$diabetes <- factor(datos$diabetes, levels = c(0, 1), labels = c("No", "Sí"))
ggplot(datos, aes(x = smoking, fill = diabetes)) +
geom_bar() +
labs(title = "Cruce de variables: Fumar y Diabetes",
x = "Fumar", y = "Cantidad") +
scale_fill_manual(values = c("purple", "darkgreen"),
labels = c("No Diabetes", "Diabetes"))
ggplot(datos, aes(x = diabetes, fill = high_blood_pressure)) +
geom_bar() +
labs(title = "Cruce de variables: Diabetes y Hipertensión",
x = "Diabetes", y = "Cantidad") +
scale_fill_manual(values = c("purple", "darkgreen"),
labels = c("Sin Hipertensión", "Con Hipertensión"))
ggplot(datos, aes(x = factor(smoking), y = age)) +
geom_boxplot() +
labs(title = "Edad según si es fumador", x = "Fumador", y = "Edad") +
facet_wrap(~ factor(smoking), ncol = 2)
ggplot(datos, aes(x = factor(smoking), y = age)) +
geom_boxplot() +
labs(title = "Edad según si es fumador", x = "Fumador", y = "Edad") +
facet_wrap(~ factor(smoking), ncol = 2)+
scale_fill_manual(values = c("purple", "darkgreen"),
labels = c("No Fumador", "Fumador"))
ggplot(datos, aes(x = factor(smoking), y = age)) +
geom_boxplot() +
labs(title = "Edad según si es fumador", x = "Fumador", y = "Edad") +
facet_wrap(~ factor(smoking), ncol = 2)+
scale_fill_manual(values = c("purple", "darkgreen"),
labels = c("No Fumador", "Fumador"))
ggplot(datos, aes(x = anaemia, fill = diabetes)) +
geom_bar() +
labs(title = "Cruce de variables: Anemia y Diabetes",
x = "Anemia", y = "Cantidad") +
scale_fill_manual(values = c("purple", "darkgreen"),
labels = c("No Diabetes", "Diabetes"))
ggplot(datos, aes(x = age)) +
geom_histogram(binwidth = 5, fill = "purple", color = "darkgreen") +
labs(title = "Distribución de Edad",
x = "Edad", y = "Frecuencia")
ggplot(datos, aes(x = anaemia)) +
geom_bar(fill = "purple", color = "darkgreen") +
labs(title = "Frecuencia de Anemia",
x = "Anemia", y = "Frecuencia absoluta")
#presión_sanguínea_alta
ggplot(data = datos, aes(x = high_blood_pressure)) + geom_histogram()
#presión_sanguínea_alta
ggplot(data = datos, aes(x = high_blood_pressure)) + geom_histogram()
#fumar
ggplot(data = datos, aes(x = smoking)) + geom_histogram()
#creatinina_fosfocinasa
ggplot(data = datos, aes(x = creatinine_phosphokinase)) + geom_histogram()
#presión_sanguínea_alta
ggplot(data = datos, aes(x = high_blood_pressure)) + geom_histogram()
ggplot(data = datos, aes(x = high_blood_pressure)) + geom_bar()
#GRÁFICOS:
#histograma:
#edad:
ggplot(data = datos, aes(x = age)) + geom_histogram()
#diabetes
ggplot(data = datos, aes(x = diabetes)) + geom_bar()
#plaquetas
ggplot(data = datos, aes(x = platelets)) + geom_histogram()
#sexo
ggplot(data = datos, aes(x = sex)) + geom_bar()
#muerte
ggplot(data = datos, aes(x = DEATH_EVENT)) + geom_histogram()
#muerte
ggplot(data = datos, aes(x = DEATH_EVENT)) + geom_bar()
#anaemia
ggplot(data = datos, aes(x = anaemia)) + geom_histogram()
#anaemia
ggplot(data = datos, aes(x = anaemia)) + geom_bar()
#suero_creatinina
ggplot(data = datos, aes(x = serum_creatinine)) + geom_histogram()
#fumar
ggplot(data = datos, aes(x = smoking)) + geom_bar()
#creatinina_fosfocinasa
ggplot(data = datos, aes(x = creatinine_phosphokinase)) + geom_histogram()
#presión_sanguínea_alta
ggplot(data = datos, aes(x = high_blood_pressure)) + geom_bar()
#suero_sodio
ggplot(data = datos, aes(x = serum_sodium)) + geom_histogram()
#tiempo
ggplot(data = datos, aes(x = time)) + geom_histogram()
ggplot(datos, aes(x = anaemia)) +
geom_bar(fill = "purple", color = "darkgreen") +
labs(title = "Frecuencia de Anemia",
x = "Anemia", y = "Frecuencia absoluta")
ggplot(datos, aes(x = diabetes)) +
geom_bar(fill = "purple", color = "darkgreen") +
labs(title = "Frecuencia de Diabetes",
x = "Diabetes", y = "Frecuencia absoluta")
ggplot(datos, aes(x = diabetes)) +
geom_bar(fill = "purple") +
labs(title = "Frecuencia de Diabetes",
x = "Diabetes", y = "Frecuencia absoluta")
ggplot(datos, aes(x = diabetes)) +
geom_bar(fill = "purple", color = "darkgreen") +
labs(title = "Frecuencia de Diabetes",
x = "Diabetes", y = "Frecuencia absoluta")
ggplot(datos, aes(x = high_blood_pressure)) +
geom_bar(fill = "purple", color = "darkgreen") +
labs(title = "Frecuencia de Hipertensión",
x = "Hipertensión", y = "Frecuencia absoluta")
ggplot(datos, aes(x = sex)) +
geom_bar(fill = "purple", color = "darkgreen") +
labs(title = "Frecuencia de Sexo",
x = "Sexo", y = "Frecuencia")
ggplot(datos, aes(x = smoking)) +
geom_bar(fill = "purple", color = "darkgreen") +
labs(title = "Frecuencia de Fumar",
x = "Fumar", y = "Frecuencia")
library(dplyr)
ggplot(datos, aes(x = age)) +
geom_histogram(binwidth = 5, fill = "purple", color = "darkgreen") +
labs(title = "Distribución de Edad",
x = "Edad", y = "Frecuencia")
ggplot(datos, aes(x = anaemia)) +
geom_bar(fill = "purple", color = "darkgreen") +
labs(title = "Frecuencia de Anemia",
x = "Anemia", y = "Frecuencia absoluta")
datos <- datos %>%
mutate(high_blood_pressure = recode(high_blood_pressure, "0" = "Sí", "1" = "No"))
ggplot(datos, aes(x = high_blood_pressure)) +
geom_bar(fill = "purple", color = "darkgreen") +
labs(title = "Frecuencia de Hipertensión",
x = "Hipertensión", y = "Frecuencia")
datos <- datos %>%
mutate(anaemia = recode(anaemia, "0" = "Sí", "1" = "No"))
ggplot(datos, aes(x = anaemia)) +
geom_bar(fill = "purple", color = "darkgreen") +
labs(title = "Frecuencia de Anemia",
x = "Anemia", y = "Frecuencia absoluta")
ggplot(datos, aes(x = anaemia)) +
geom_bar(fill = "purple", color = "darkgreen") +
labs(title = "Frecuencia de Anemia",
x = "Anemia", y = "Frecuencia absoluta")
datos <- datos %>%
mutate(anaemia = recode(anaemia, "0" = "No", "1" = "Si"))
ggplot(datos, aes(x = anaemia)) +
geom_bar(fill = "purple", color = "darkgreen") +
labs(title = "Frecuencia de Anemia",
x = "Anemia", y = "Frecuencia absoluta")
datos <- read.csv("./datos/heart_failure_clinical_records_dataset.csv")
datos <- datos %>%
mutate(anaemia = recode(anaemia, "0" = "No", "1" = "Si"))
ggplot(datos, aes(x = anaemia)) +
geom_bar(fill = "purple", color = "darkgreen") +
labs(title = "Frecuencia de Anemia",
x = "Anemia", y = "Frecuencia absoluta")
datos <- datos %>%
mutate(high_blood_pressure = recode(high_blood_pressure, "0" = "No", "1" = "Si"))
ggplot(datos, aes(x = high_blood_pressure)) +
geom_bar(fill = "purple", color = "darkgreen") +
labs(title = "Frecuencia de Hipertensión",
x = "Hipertensión", y = "Frecuencia")
datos <- datos %>%
mutate(diabetes = recode(diabetes, "0" = "No", "1" = "Si"))
ggplot(datos, aes(x = diabetes)) +
geom_bar(fill = "purple", color = "darkgreen") +
labs(title = "Frecuencia de Diabetes",
x = "Diabetes", y = "Frecuencia")
datos <- datos %>%
mutate(smoking = recode(smoking, "0" = "No", "1" = "Si"))
ggplot(datos, aes(x = smoking)) +
geom_bar(fill = "purple", color = "darkgreen") +
labs(title = "Frecuencia de Fumar",
x = "Fumar", y = "Frecuencia")
ggplot(datos, aes(x = sex)) +
geom_bar(fill = "purple", color = "darkgreen") +
labs(title = "Frecuencia de Sexo",
x = "Sexo", y = "Frecuencia")
ggplot(datos, aes(x = factor(sex))) +
geom_bar(fill = "purple", color = "darkgreen") +
labs(title = "Frecuencia de Sexo",
x = "Sexo", y = "Frecuencia")
ggplot(datos, aes(x = factor(anaemia))) +
geom_bar(fill = "purple", color = "darkgreen") +
labs(title = "Frecuencia de Anemia",
x = "Anemia", y = "Frecuencia")
ggplot(datos, aes(x = factor(diabetes))) +
geom_bar(fill = "purple", color = "darkgreen") +
labs(title = "Frecuencia de Diabetes",
x = "Diabetes", y = "Frecuencia")
ggplot(datos, aes(x = factor(high_blood_pressure))) +
geom_bar(fill = "purple", color = "darkgreen") +
labs(title = "Frecuencia de Hipertensión",
x = "Hipertensión", y = "Frecuencia")
ggplot(datos, aes(x = factor(sex))) +
geom_bar(fill = "purple", color = "darkgreen") +
labs(title = "Frecuencia de Sexo",
x = "Sexo", y = "Frecuencia")
ggplot(datos, aes(x = factor(smoking))) +
geom_bar(fill = "purple", color = "darkgreen") +
labs(title = "Frecuencia de Fumar",
x = "Fumar", y = "Frecuencia")
#Apertura del archivo:
datos <- read.csv("./datos/heart_failure_clinical_records_dataset.csv")
ggplot(datos, aes(x = age)) +
geom_histogram(binwidth = 5, fill = "purple", color = "darkgreen") +
labs(title = "Distribución de Edad",
x = "Edad", y = "Frecuencia")
ggplot(datos, aes(x = factor(anaemia))) +
geom_bar(fill = "purple", color = "darkgreen") +
labs(title = "Frecuencia de Anemia",
x = "Anemia", y = "Frecuencia")
table(datos$anaemia)
ggplot(data = datos, aes(x = age)) + geom_histogram()
ggplot(data = datos, aes(x = diabetes)) + geom_bar()
ggplot(data = datos, aes(x = time)) + geom_histogram()
ggplot(datos, aes(x = sex, fill = high_blood_pressure)) +
geom_bar(position = "dodge") +
labs(title = "Cruce de variables: Sexo y Hipertensión",
x = "Sexo", y = "Cantidad") +
scale_fill_manual(values = c("purple", "darkgreen"),
labels = c("No Hipertensión", "Hipertensión"))
ggplot(datos, aes(x = sex, fill = factor(high_blood_pressure))) +
geom_bar(position = "dodge") +
labs(title = "Cruce de variables: Sexo y Hipertensión",
x = "Sexo", y = "Cantidad") +
scale_fill_manual(values = c("purple", "darkgreen"),
labels = c("No Hipertensión", "Hipertensión"))
ggplot(datos, aes(x = smoking, fill = factor(diabetes))) +
geom_bar() +
labs(title = "Cruce de variables: Fumar y Diabetes",
x = "Fumar", y = "Cantidad") +
scale_fill_manual(values = c("purple", "darkgreen"),
labels = c("No Diabetes", "Diabetes"))
ggplot(datos, aes(x = smoking, fill = diabetes)) +
geom_bar() +
labs(title = "Cruce de variables: Fumar y Diabetes",
x = "Fumar", y = "Cantidad") +
scale_fill_manual(values = c("purple", "darkgreen"),
labels = c("No Diabetes", "Diabetes"))
ggplot(datos, aes(x = smoking, fill = factor(diabetes))) +
geom_bar() +
labs(title = "Cruce de variables: Fumar y Diabetes",
x = "Fumar", y = "Cantidad") +
scale_fill_manual(values = c("purple", "darkgreen"),
labels = c("No Diabetes", "Diabetes"))
ggplot(datos, aes(x = smoking, fill = factor(diabetes))) +
geom_bar() +
labs(title = "Cruce de variables: Fumar y Diabetes",
x = "Fumar", y = "Cantidad", fill = "Diabetes") +
scale_fill_manual(values = c("purple","darkgreen"),
labels = c("No Diabetes", "Diabetes"))
ggplot(datos, aes(x = sex, fill = factor(high_blood_pressure))) +
geom_bar(position = "dodge") +
labs(title = "Cruce de variables: Sexo y Hipertensión",
x = "Sexo", y = "Cantidad") +
scale_fill_manual(values = c("purple", "darkgreen"),
labels = c("No Hipertensión", "Hipertensión"))
ggplot(datos, aes(x = sex, fill = factor(high_blood_pressure))) +
geom_bar(position = "dodge") +
labs(title = "Cruce de variables: Sexo y Hipertensión",
x = "Sexo", y = "Cantidad", fill = "Hipertensión") +
scale_fill_manual(values = c("purple", "darkgreen"),
labels = c("No Hipertensión", "Hipertensión"))
ggplot(datos, aes(x = factor(smoking), y = age)) +
geom_boxplot() +
labs(title = "Edad según si es fumador", x = "Fumador", y = "Edad") +
facet_wrap(~ factor(smoking), ncol = 2)
ggplot(datos, aes(x = diabetes, fill = factor(high_blood_pressure))) +
geom_bar() +
labs(title = "Cruce de variables: Diabetes y Hipertensión",
x = "Diabetes", y = "Cantidad", fill = "Hipertensión") +
scale_fill_manual(values = c("purple", "darkgreen"),
labels = c("Sin Hipertensión", "Con Hipertensión"))
ggplot(datos, aes(x = anaemia, fill = factor(diabetes))) +
geom_bar() +
labs(title = "Cruce de variables: Anemia y Diabetes",
x = "Anemia", y = "Cantidad", fill = "Diabetes") +
scale_fill_manual(values = c("purple", "darkgreen"),
labels = c("No Diabetes", "Diabetes"))
ggplot(datos, aes(x = factor(smoking), y = age)) +
geom_boxplot() +
labs(title = "Edad según si es fumador", x = "Fumador", y = "Edad") +
facet_wrap(~ factor(smoking), ncol = 2)
ggplot(datos, aes(x = factor(smoking), y = age, fill = factor(smoking))) +
geom_boxplot() +
labs(title = "Edad según si es fumador", x = "Fumador", y = "Edad") +
facet_wrap(~ factor(smoking), ncol = 2) +
scale_fill_manual(values = c("purple", "darkgreen"),
labels = c("No fumador", "Fumador"))
ggplot(datos, aes(x = factor(smoking), y = age, fill = factor(smoking))) +
geom_boxplot() +
labs(title = "Edad según si es fumador", x = "Fumador", y = "Edad", fill = "Fumador") +
facet_wrap(~ factor(smoking), ncol = 2) +
scale_fill_manual(values = c("purple", "darkgreen"),
labels = c("No fumador", "Fumador"))
ggplot(datos, aes(x = factor(sex), y = time, fill = factor(sex))) +
geom_boxplot() +
labs(title = "Tiempo internado según género", x = "Género", y = "Tiempo internado", fill = "Género") +
facet_wrap(~ factor(smoking), ncol = 2) +
scale_fill_manual(values = c("purple", "darkgreen"))
ggplot(datos, aes(x = factor(sex), y = time, fill = factor(sex))) +
geom_boxplot() +
labs(title = "Tiempo internado según género", x = "Género", y = "Tiempo internado", fill = "Género") +
facet_wrap(~ factor(smoking), ncol = 2) +
scale_fill_manual(values = c("purple", "darkgreen"),
labels = c("Femenino", "Masculino"))
ggplot(datos, aes(x = factor(smoking), y = age, fill = factor(smoking))) +
geom_boxplot() +
labs(title = "Edad según si es fumador", x = "Fumador", y = "Edad", fill = "Fumador") +
facet_wrap(~ factor(smoking), ncol = 2) +
scale_fill_manual(values = c("purple", "darkgreen"),
labels = c("No fumador", "Fumador"))
ggplot(datos, aes(x = factor(sex), y = time, fill = factor(sex))) +
geom_boxplot() +
labs(title = "Tiempo internado según género", x = "Género", y = "Tiempo internado") +
facet_wrap(~ factor(sex), ncol = 2) +
scale_fill_manual(values = c("purple", "darkgreen"),
labels = c("Hombre", "Mujer"))
ggplot(datos, aes(x = factor(sex), y = time, fill = factor(sex))) +
geom_boxplot() +
labs(title = "Tiempo internado según género", x = "Género", y = "Tiempo internado", fill="Género") +
facet_wrap(~ factor(sex), ncol = 2) +
scale_fill_manual(values = c("purple", "darkgreen"),
labels = c("Hombre", "Mujer"))
ggplot(datos, aes(x = factor(sex), y = time, fill = factor(sex))) +
geom_boxplot() +
labs(title = "Tiempo internado según género", x = "Género", y = "Tiempo internado", fill="Género") +
facet_wrap(~ factor(sex), ncol = 2) +
scale_fill_manual(values = c("purple", "darkgreen"),
labels = c("Mujer", "Hombre"))
ggplot(datos, aes(x = factor(DEATH_EVENT), y = time)) +
geom_boxplot() +
labs(title = "Comparación de tiempo internado y muerte", x = "Muerte", y = "Tiempo")+
facet_wrap(~ factor(DEATH_EVENT), ncol = 2)
ggplot(datos, aes(x = factor(DEATH_EVENT), y = time, fill = factor(DEATH_EVENT))) +
geom_boxplot() +
labs(title = "Comparación de tiempo internado y muerte", x = "Muerte", y = "Tiempo") +
facet_wrap(~ factor(DEATH_EVENT), ncol = 2) +
scale_fill_manual(values = c("purple", "darkgreen"),
labels = c("Fallecido", "No fallecido"))
ggplot(datos, aes(x = factor(DEATH_EVENT), y = time, fill = factor(DEATH_EVENT))) +
geom_boxplot() +
labs(title = "Comparación de tiempo internado y muerte", x = "Muerte", y = "Tiempo", fill = "Estado de vida") +
facet_wrap(~ factor(DEATH_EVENT), ncol = 2) +
scale_fill_manual(values = c("purple", "darkgreen"),
labels = c("Fallecido", "No fallecido"))
ggplot(datos, aes(x = factor(DEATH_EVENT), y = time, fill = factor(DEATH_EVENT))) +
geom_boxplot() +
labs(title = "Comparación de tiempo internado y estado de vida", x = "Muerte", y = "Tiempo", fill = "Estado de vida") +
facet_wrap(~ factor(DEATH_EVENT), ncol = 2) +
scale_fill_manual(values = c("purple", "darkgreen"),
labels = c("Fallecido", "No fallecido"))
ggplot(datos, aes(y = age)) +
geom_boxplot(width = 0.5) +
labs(title = "Distribución de la Edad", y = "Edad")
ggplot(datos, aes(y = age, fill = "Edad")) +
geom_boxplot(width = 0.5) +
labs(title = "Distribución de la Edad", y = "Edad") +
scale_fill_manual(values = c("purple", "darkgreen")
ggplot(datos, aes(y = age, fill = "Edad")) +
ggplot(datos, aes(y = age, fill = "Edad")) +
geom_boxplot(width = 0.5) +
labs(title = "Distribución de la Edad", y = "Edad") +
scale_fill_manual(values = "purple")
ggplot(datos, aes(y = age, fill = "Edad")) +
geom_boxplot(width = 0.5) +
labs(title = "Distribución de la Edad", y = "Edad", fill = "Edad") +
scale_fill_manual(values = "purple")
ggplot(datos, aes(x = factor(anaemia))) +
geom_bar(fill = "purple", color = "darkgreen") +
labs(title = "Frecuencia de Anemia",
x = "Anemia", y = "Frecuencia")
ggplot(datos, aes(x = age)) +
geom_histogram(binwidth = 5, fill = "purple", color = "darkgreen") +
labs(title = "Distribución de Edad",
x = "Edad", y = "Frecuencia")
Ac_Cardiaco <- fread("./datos/heart_failure_clinical_records_dataset.csv")
Ac_Cardiaco <- fread("./datos/heart_failure_clinical_records_dataset.csv")
install.packages("data.table")
library(data.table)
library(fastDummies)
library(caret)
library(pROC)
library(dplyr)
library(scales)
Ac_Cardiaco <- fread("./datos/heart_failure_clinical_records_dataset.csv")
Ac_Cardiaco$DEATH_EVENT <- as.factor(Ac_Cardiaco$DEATH_EVENT)
#EXPLORACION DE LOS DATOS
#-----------------------------------------------------------------------------------------------------------------------------------------------
#Comenzamos recorriendo un poco el dataset e investigando sobre los datos y variables
#número de filas y columnas
dim(Ac_Cardiaco)
#nombres de las columnas
names(Ac_Cardiaco)
#primeras filas del dataset
head(Ac_Cardiaco)
#Información del dataset
str(Ac_Cardiaco)
#resumen estadístico
summary(Ac_Cardiaco)
table(Ac_Cardiaco$anaemia)
table(Ac_Cardiaco$diabetes)
table(Ac_Cardiaco$high_blood_pressure)
table(Ac_Cardiaco$sex)
table(Ac_Cardiaco$smoking)
#Edad según el sexo:
ggplot(data = Ac_Cardiaco, aes(x = sex, y = age, group = sex)) +
geom_boxplot(fill = c("violet", "green"))+
labs(title = "Boxplot edad paciente") +
theme(plot.title = element_text(hjust = 0.5))+
labs(x = "Sexo del paciente", y = "Edad")
#Distribución segun el sexo
ggplot(data = Ac_Cardiaco, aes(x = sex)) + geom_bar(fill = c("violet", "green"))+
labs(title = "Gráfico de barras según el sexo del paciente") +
theme(plot.title = element_text(hjust = 0.5))+
labs(x = "Sexo", y = "Frecuencia absoluta")
#Fumador
ggplot(data = Ac_Cardiaco, aes(x = smoking)) + geom_bar(fill = c("#87CEFA", "#8B3A3A"))+
labs(title = "Gráfico de barras según condición de fumador") +
theme(plot.title = element_text(hjust = 0.5))+
labs(x = "Fumador", y = "Frecuencia absoluta")
#Hipertensión
ggplot(data = Ac_Cardiaco, aes(x = high_blood_pressure)) + geom_bar(fill =  c("#87CEFA", "#8B3A3A"))+
labs(title = "Gráfico de barras según condición de hipertensión") +
theme(plot.title = element_text(hjust = 0.5))+
labs(x = "Hipertensión", y = "Frecuencia absoluta")
#Tiempo internado y supervivencia
ggplot(data = Ac_Cardiaco, aes(x = DEATH_EVENT, y = time, group = DEATH_EVENT)) +
geom_boxplot(fill = c("#87CEFA", "#8B3A3A"))+
labs(title = "Boxplot tiempo internado vs supervivencia") +
theme(plot.title = element_text(hjust = 0.5))+
labs(x = "Fallecimiento luego de la obs", y = "Tiempo de observación")
#Distribución segun fallecimiento
ggplot(data = Ac_Cardiaco, aes(x = DEATH_EVENT)) + geom_bar(fill = c("#87CEFA", "#8B3A3A"))+
labs(title = "Gráfico de barras según condición de supervivencia") +
theme(plot.title = element_text(hjust = 0.5))+
labs(x = "Fallecimiento", y = "Frecuencia absoluta")
# Inicializamos la semilla aleatoria
set.seed(1234)
#Definimos la proporción utilizada para entrenar
prop <- 0.7 # 70/30
# Encontramos el número de observaciones de los datos
N <- nrow(Ac_Cardiaco)
#Definimos el tamaño de la partición
tamanio <- floor(prop*N) #Se utiliza la función floor para redondear decimales
#Encontramos el conjunto de indices de entrenamiento
cardio.indices<- sample(seq_len(N),size = tamanio)
#Asignamos el tipo de variable necesario para crear las variables DUMMIES
Ac_Cardiaco$anaemia <- as.factor(Ac_Cardiaco$anaemia)
Ac_Cardiaco$diabetes <- as.factor(Ac_Cardiaco$diabetes)
Ac_Cardiaco$high_blood_pressure <- as.factor(Ac_Cardiaco$high_blood_pressure)
Ac_Cardiaco$sex <- as.factor(Ac_Cardiaco$sex)
Ac_Cardiaco$smoking <- as.factor(Ac_Cardiaco$smoking)
Ac_Cardiaco$DEATH_EVENT <- as.factor(Ac_Cardiaco$DEATH_EVENT)
#Utilizamos variables DUMMIES para las de tipo categórica:
Ac_Cardiaco_dummies <- dummy_cols(Ac_Cardiaco,
select_columns = c( "anaemia","diabetes", "high_blood_pressure","sex","smoking"),
remove_selected_columns = TRUE)
##Creación de los conjuntos de entrenamiento y testeo (VALIDACION SIMPLE)
cardio.train <- Ac_Cardiaco_dummies[cardio.indices,] #Entrenamiento
cardio.test <- Ac_Cardiaco_dummies[-cardio.indices,] #Testeo
#Creamos el modelo
modelo_AC_Dum <- glm(DEATH_EVENT~., cardio.train, family = "binomial")
summary(modelo_AC_Dum)
#Testeamos el modelo realizando una predicción
ACDUM.pred <- predict(modelo_AC_Dum, cardio.test, type="response")
#Gráfica de la curva ROC
#Curva ROC
pred.modelo_dum <- ifelse(ACDUM.pred > 0.5,1,0)
plot.roc(pred.modelo_dum, as.numeric(cardio.test$DEATH_EVENT))
#Area bajo la curva
auc(pred.modelo_dum,as.numeric(cardio.test$DEATH_EVENT)) #AUC = 0.754
#Matriz de confusión para corroborar la clasificación
matriz_conf_ACD <- confusionMatrix(factor(pred.modelo_dum), factor(cardio.test$DEATH_EVENT))
matriz_conf_ACD$table
#Creamos el modelo
modelo_AC_num <- glm(DEATH_EVENT~age+creatinine_phosphokinase+ejection_fraction+platelets+serum_creatinine+serum_sodium+time, cardio.train, family = "binomial")
summary(modelo_AC_num)
#Testeamos el modelo realizando una predicción
ACNUM.pred <- predict(modelo_AC_num, cardio.test, type="response")
#Gráfica de la curva ROC
#Curva ROC
pred.modelo_num <- ifelse(ACNUM.pred > 0.5,1,0)
plot.roc(pred.modelo_num, as.numeric(cardio.test$DEATH_EVENT))
#Area bajo la curva
auc(pred.modelo_num,as.numeric(cardio.test$DEATH_EVENT)) #AUC = 0.806
#Matriz de confusión para corroborar la clasificación
matriz_conf_ACN <- confusionMatrix(factor(pred.modelo_num), factor(cardio.test$DEATH_EVENT))
matriz_conf_ACN$table
#Podemos ver que el modelo tiene una Accuracy = 0.833
#Creamos el modelo
modelo_AC_Dum <- glm(DEATH_EVENT~., cardio.train, family = "binomial")
#Creamos el modelo
modelo_AC_Dum <- glm(DEATH_EVENT~., cardio.train, family = "binomial")
summary(modelo_AC_Dum)
