library("data.table")
library("caret")
install.packages("fastDummies")
library("fastDummies")
library("pRoc")
library("pRoC")
library("pROC")
datos2 <- dummy_cols(datos, select_columns = "sexo", remove_selected_columns = T)
datos <- fread("./datos/c_consulta.csv")
datos <- fread("./datos/c_consulta.csv", , sep=";")
datos <- fread("./datos/c_consulta.csv", , sep=";")
datos2 <- dummy_cols(datos, select_columns = "sexo", remove_selected_columns = T)
set.seed(1234)
library("caTools")
library("MASS")
install.packages("caTools")
library("caTools")
install.packages("e1071")
library("naivebayes")
install.packages ("naivebayes")
datos <- fread("./datos/demencia.xls")
install.packages("readxl")
library("readxl")
datos <- read_excel("./datos/demencia.xls")
set.seed(1234)
porc <- 0.7
N <- nrow(datos)
tamanio <- floor(porc*N)
train.ind <- sample(seq_len(N), size=tamanio)
datos.train <- datos[train.ind,]
datos.test <- datos[-train.ind,]
View(datos)
View(datos)
View(datos)
datos2 <- dummy_cols(datos, select_columns = c("WINE","HIGHHBP","T3DEMEN"),
remove_selected_columns = T
)
View(datos2)
View(datos2)
datos2 <- dummy_cols(datos, select_columns = c("WINE","HIGHBPH","T3DEMEN"),
remove_selected_columns = T
)
View(datos2)
datos2 <- dummy_cols(datos, select_columns = c("WINE","HIGHBP","T3DEMEN"),
remove_selected_columns = T
)
set.seed(1234)
porc <- 0.7
N <- nrow(datos)
tamanio <- floor(porc*N)
train.ind <- sample(seq_len(N), size=tamanio)
datos.train <- datos[train.ind,]
datos.test <- datos[-train.ind,]
train.ind <- sample(seq_len(N), size=tamanio)
datos.train <- datos[train.ind,2:10]
datos.test <- datos[-train.ind,2:10]
N <- nrow(datos2)
tamanio <- floor(porc*N)
train.ind <- sample(seq_len(N), size=tamanio)
datos.train <- datos2[train.ind,2:10]
datos.test <- datos2[-train.ind,2:10]
View(datos.test)
View(datos.test)
datos2.train <- datos2[train.ind,2:10]
datos2.test <- datos2[-train.ind,2:10]
#encuentro modelo de regresion logistica
modelo.datos <- glm(T3DEMEN~., datos2.train, family="binomial")
datos2 <- dummy_cols(datos, select_columns = c("WINE","HIGHBP"),
remove_selected_columns = T
)
set.seed(1234)
porc <- 0.7
N <- nrow(datos2)
tamanio <- floor(porc*N)
train.ind <- sample(seq_len(N), size=tamanio)
datos2.train <- datos2[train.ind,2:10]
datos2.test <- datos2[-train.ind,2:10]
datos2.train <- datos2[train.ind,2:9]
datos2.test <- datos2[-train.ind,2:9]
#encuentro modelo de regresion logistica
modelo.datos <- glm(T3DEMEN~., datos2.train, family="binomial")
summary(modelo.datos)
datos2$T3DEMEN <- as.factor(datos2$T3DEMEN)
plot(T3DEMEN~.,datos2.train, col = factor(datos2.train$T3DEMEN))
demen.pred <- predict(modelo.datos, datos2.test, type="response")
demen.pred <-  ifelse(datos2.pred>0.5,1,0)
demen.pred <-  ifelse(datos2.test>0.5,1,0)
plot.roc(demen.pred,datos2.test$T3DEMEN)
matriz_conf <- confusionMatrix(factor(demen.pred), factor(datos2.test$T3DEMEN))
matriz_conf$table
View(demen.pred)
View(demen.pred)
datos <- read_excel("./datos/demencia.xls")
datos2 <- dummy_cols(datos, select_columns = c("WINE","HIGHBP"),
remove_selected_columns = T
)
datos2$T3DEMEN <- as.factor(datos2$T3DEMEN)
datos <- read_excel("./datos/demencia.xls")
datos2 <- dummy_cols(datos, select_columns = c("WINE","HIGHBP"),
remove_selected_columns = T
)
View(datos2)
datos2$T3DEMEN <- as.factor(datos2$T3DEMEN)
str(datos2)
set.seed(1234)
porc <- 0.7
porc <- 0.8
N <- nrow(datos2)
tamanio <- floor(porc*N)
train.ind <- sample(seq_len(N), size=tamanio)
datos2.train <- datos2[train.ind,2:9]
datos2.test <- datos2[-train.ind,2:9]
View(datos2.test)
#encuentro modelo de regresion logistica
modelo.datos <- glm(T3DEMEN~., datos2.train, family="binomial")
summary(modelo.datos)
demen.pred <-  ifelse(datos2.test$T3DEMEN>0.5,1,0)
plot.roc(demen.pred,datos2.test$T3DEMEN)
matriz_conf <- confusionMatrix(factor(demen.pred), factor(datos2.test$T3DEMEN))
demen.pred <- predict(modelo.datos, datos2.test, type="response")
#encuentro modelo de regresion logistica
modelo.datos <- glm(T3DEMEN~., datos2.train, family="binomial")
summary(modelo.datos)
demen.pred <- predict(modelo.datos, datos2.test, type="response")
demen.pred
demen.pred <-  ifelse(datos2.test>0.5,1,0)
View(demen.pred)
demen.pred <- predict(modelo.datos, datos2.test, type="response")
demen.pred <-  ifelse(demen.pred>0.5,1,0)
demen.pred
plot.roc(demen.pred,datos2.test$T3DEMEN)
matriz_conf <- confusionMatrix(factor(demen.pred), factor(datos2.test$T3DEMEN))
matriz_conf$table
View(matriz_conf)
View(matriz_conf)
dato_nuevo <- data.frame(
AGE= 70,
MMSE= 25,
WINE_0=0,
WINE_1= 1,
WINE_2=0,
HIGHBP_0= 0
HIGHBP_1= 1)
dato_nuevo <- data.frame(
AGE= 70,
MMSE= 25,
WINE_0=0,
WINE_1= 1,
WINE_2=0,
HIGHBP_0= 0,
HIGHBP_1= 1)
caso_nuevo <- predict(modelo.datos, newdata=dato_nuevo, type="response")
datos3 <- fread("./datos/haberman.csv")
View(datos3)
View(datos3)
datos3$Estado <- factor(datos3$Estado)
datos3 <- fread("./datos/trenes.txt")
set.seed(1234)
datos3.train <- datos3[train.ind]
datos3.test <- datos2[-train.ind]
datos3.test <- datos3[-train.ind]
modelo.train <- naivebayes(puntualidad~., data=datos3)
library("e1071")
library("naivebayes")
set.seed(1234)
datos3.train <- datos3[train.ind]
datos3.test <- datos3[-train.ind]
modelo.train <- naivebayes(puntualidad~., data=datos3)
modelo.train <- naiveBayes(puntualidad~., data=datos3)
modelo.train <- naiveBayes(puntualidad~., data=datos3.train)
modelo.trenes <- naiveBayes(puntualidad~., data=datos3.train)
trenes.predict <- predict(modelo.trenes, datos3.train)
matriz_conf2 <- confusionMatrix(factor(trenes.predict), factor(datos3.test$puntualidad))
matriz_conf2 <- confusionMatrix(trenes.predict, datos3.test$puntualidad)
matriz_conf2 <- confusionMatrix(factor(trenes.predict), datos3.test$puntualidad)
matriz_conf2 <- confusionMatrix(trenes.predict, factor(datos3.test$puntualidad))
trenes.predict
matriz_conf2 <- confusionMatrix(factor(trenes.predict), factor(datos3.test$puntualidad))
datos3.train <- datos3[train.ind,1:4]
datos3.test <- datos3[-train.ind,1:4]
modelo.trenes <- naiveBayes(puntualidad~., data=datos3.train)
trenes.predict <- predict(modelo.trenes, datos3.train)
matriz_conf2 <- confusionMatrix(factor(trenes.predict), factor(datos3.test$puntualidad))
View(modelo.trenes)
View(datos3.train)
datos3.train <- datos3[train.ind,]
datos3.test <- datos3[-train.ind,]
modelo.trenes <- naiveBayes(puntualidad~., data=datos3.train)
trenes.predict <- predict(modelo.trenes, datos3.train)
matriz_conf2 <- confusionMatrix(factor(trenes.predict), factor(datos3.test$puntualidad))
trenes.predict <- predict(modelo.trenes, datos3.test)
matriz_conf2 <- confusionMatrix(factor(trenes.predict), factor(datos3.test$puntualidad))
trenes.predict
datos3.train <- datos3[train.ind,]
datos3.test <- datos3[-train.ind,]
modelo.trenes <- naiveBayes(puntualidad~., data=datos3.train)
trenes.predict <- predict(modelo.trenes, datos3.test)
matriz_conf2 <- confusionMatrix(factor(trenes.predict), factor(datos3.test$puntualidad))
matriz_conf2$table
